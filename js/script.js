"use strict";var _createClass=function(){function n(i,t){for(var e=0;e<t.length;e++){var n=t[e];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(i,n.key,n)}}return function(i,t,e){return t&&n(i.prototype,t),e&&n(i,e),i}}();function _classCallCheck(i,t){if(!(i instanceof t))throw new TypeError("Cannot call a class as a function")}!function(a){a.fn.animateCSS=function(t,e,n){return this.each(function(){var i=a(this);e&&"function"!=typeof e||(n=e,e=0);setTimeout(function(){i.addClass("animated "+t),"hidden"==i.css("visibility")&&i.css({visibility:"visible"}),i.is(":hidden")&&i.show(),i.bind("webkitAnimationEnd animationend oAnimationEnd",function(){"function"==typeof n&&n.call(this)})},e)})}}(jQuery),function(a){a.fn.animateCSS=function(t,e,n){return this.each(function(){var i=a(this);e&&"function"!=typeof e||(n=e,e=0);setTimeout(function(){i.addClass("animated "+t),"hidden"==i.css("visibility")&&i.css({visibility:"visible"}),i.is(":hidden")&&i.show(),i.bind("webkitAnimationEnd animationend oAnimationEnd",function(){"function"==typeof n&&n.call(this)})},e)})}}(jQuery),$("html").easeScroll(),$(".svg-wrapper").click(function(i){i.preventDefault(),$("html, body").animate({scrollTop:0},1e3)}),function(){$(".menu--drop").click(function(){$(this).find(".main-drop").toggleClass("main-drop-open")}),$("section").click(function(){$(".main-drop").hasClass("main-drop-open")&&$(".main-drop").removeClass("main-drop-open")});var i=document.getElementById("links__porfolio");if(null==i);else for(var t=i.getElementsByTagName("li"),e=0;e<t.length;e++)t[e].addEventListener("click",function(i){i.preventDefault();var t=document.getElementsByClassName("p_link");t[0].className=t[0].className.replace(" p_link",""),this.className+=" p_link"});if($(".index").length){$(window).height();$(window).scroll(function(){var i=Math.trunc($(window).scrollTop()),t=$(".welcome").offset(),e=$(".header-nav");(t=Math.trunc(t.top))<=i?e.addClass("dark"):e.removeClass("dark"),300<$(this).scrollTop()?$(".svg-wrapper").addClass("expand"):$(".svg-wrapper").removeClass("expand");var n=$(".footer-card"),a=$(".map").offset(),s=i-(a=Math.trunc(a.top));a<=i?240<s||n.css("marginTop","-"+s+"px"):n.css("marginTop","26px")})}}();var $window=$(window),$body=$("body"),Slideshow=function(){function a(){var t=this,i=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};_classCallCheck(this,a);var e={$el:$(".slideshow"),showArrows:!1,showPagination:!0,duration:1e4,autoplay:!0},n=Object.assign({},e,i);this.$el=n.$el,this.maxSlide=this.$el.find($(".js-slider-home-slide")).length,this.showArrows=1<this.maxSlide&&n.showArrows,this.showPagination=n.showPagination,this.currentSlide=1,this.isAnimating=!1,this.animationDuration=1200,this.autoplaySpeed=n.duration,this.interval,this.$controls=this.$el.find(".js-slider-home-button"),this.autoplay=1<this.maxSlide&&n.autoplay,this.$el.on("click",".js-slider-home-next",function(i){return t.nextSlide()}),this.$el.on("click",".js-slider-home-prev",function(i){return t.prevSlide()}),this.$el.on("click",".js-pagination-item",function(i){t.isAnimating||(t.preventClick(),t.goToSlide(i.target.dataset.slide))}),this.init()}return _createClass(a,[{key:"init",value:function(){if(this.goToSlide(1),this.autoplay&&this.startAutoplay(),this.showPagination){this.maxSlide;for(var i='<div class="pagination"><div class="container d-flex justify-content-end">',t=0;t<this.maxSlide;t++){i+='<span class="pagination__item js-pagination-item '+(0===t?"is-current":"")+'" data-slide='+(t+1)+">"+(t+1)+"</span>"}i+="</div></div>",this.$el.append(i)}}},{key:"preventClick",value:function(){var i=this;this.isAnimating=!0,this.$controls.prop("disabled",!0),clearInterval(this.interval),setTimeout(function(){i.isAnimating=!1,i.$controls.prop("disabled",!1),i.autoplay&&i.startAutoplay()},this.animationDuration)}},{key:"goToSlide",value:function(i){this.currentSlide=parseInt(i),this.currentSlide>this.maxSlide&&(this.currentSlide=1),0===this.currentSlide&&(this.currentSlide=this.maxSlide);var t=this.$el.find('.js-slider-home-slide[data-slide="'+this.currentSlide+'"]'),e=1===this.currentSlide?this.$el.find(".js-slider-home-slide").last():t.prev(".js-slider-home-slide"),n=this.currentSlide===this.maxSlide?this.$el.find(".js-slider-home-slide").first():t.next(".js-slider-home-slide");this.$el.find(".js-slider-home-slide").removeClass("is-prev is-next is-current"),this.$el.find(".js-pagination-item").removeClass("is-current"),1<this.maxSlide&&(e.addClass("is-prev"),n.addClass("is-next")),t.addClass("is-current"),this.$el.find('.js-pagination-item[data-slide="'+this.currentSlide+'"]').addClass("is-current")}},{key:"nextSlide",value:function(){this.preventClick(),this.goToSlide(this.currentSlide+1)}},{key:"prevSlide",value:function(){this.preventClick(),this.goToSlide(this.currentSlide-1)}},{key:"startAutoplay",value:function(){var i=this;this.interval=setInterval(function(){i.isAnimating||i.nextSlide()},this.autoplaySpeed)}},{key:"destroy",value:function(){this.$el.off()}}]),a}();if(function(){var i=!1;function t(){new Slideshow({showPagination:!0})}$window.on("load",function(){i||(i=!0,t())}),setTimeout(function(){i||(i=!0,t())},3e3),$body.addClass("is-loaded"),setTimeout(function(){$body.addClass("is-animated")},600)}(),$(".index").length){var onScroll=function(i){var e=$(document).scrollTop();$("#nav li a").each(function(){var i=$(this),t=$(i.attr("href"));t.position().top<=e&&t.position().top+t.height()>e?($("#nav li a").removeClass("active"),i.addClass("active")):i.removeClass("active")})};$(document).on("click","#svg-a",function(i){i.preventDefault(),$("html, body").animate({scrollTop:$("#about").offset().top},1e3)}),$(document).ready(function(){$(document).on("scroll",onScroll),$('#nav a[href^="#"]').on("click",function(i){i.preventDefault(),$(document).off("scroll"),$("#nav li a").each(function(){$(this).removeClass("active")}),$(this).addClass("active");var t=this.hash,e=$(t);$("html, body").stop().animate({scrollTop:e.offset().top+2},500,"swing",function(){window.location.hash=t,$(document).on("scroll",onScroll)})})})}var w=$(window).height(),maximun=0;if(w<720&&($("#links__porfolio li").each(function(){var i=parseFloat($(this).height());maximun<i&&(maximun=parseFloat(i))}),console.log($(".marketing").offset()),console.log($(".marketing").lenght),console.log(w*Math.trunc(maximun))),$(".shop").length&&($(function(){var t,e,n;$(".tabs").append("<li id='magic-line'></li>"),(n=$("#magic-line")).height($(".active").height()).css("top",$(".active a").position().top).data("origtop",n.position().top).data("origheight",n.height()),$(".tabs li a").click(function(i){i.preventDefault();var t=$(this);return t.parent().addClass("active").siblings().removeClass("active"),n.data("origtop",t.position().top).data("origheight",t.parent().height()),!1}),$(".tabs li").find("a").hover(function(){var i=$(this);t=i.position().top,e=i.parent().height(),n.css({top:t,height:e})},function(){n.css({top:n.data("origtop"),height:n.data("origheight")})})}),$(function(){$(".tab-content").find(".data-d").each(function(i){$(this).animateCSS("fadeIn",100*i)})}),$(".tabs li a").click(function(i){i.preventDefault();var t=$(this).attr("data-tab");$("ul.tabs li").removeClass("current"),$(".tabs-child").removeClass("current"),$(this).addClass("current"),$("#"+t).addClass("current"),$(".tabs-child").find(".data-d").removeClass("fadeIn"),$(".tabs-child.current").find(".data-d").each(function(i){$(this).animateCSS("fadeIn",100*i)})})),$(".product-view").length){var product=$(".product-view"),item=$(".span-thumbail");item.click(function(i){var t=$(this).css("background-image");t=t.replace("url(","").replace(")",""),$(".details-menu").css("background-image","url("+t+")"),$(".data-gallery a").attr("href",t.replace(/['"]+/g,""))})}$(".overlay-menu").length&&($(".menu-hambuguer").click(function(i){i.preventDefault(),$("body").toggleClass("is-open")}),$(".close-btn-menu").click(function(i){i.preventDefault(),$("body").toggleClass("is-open")}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
